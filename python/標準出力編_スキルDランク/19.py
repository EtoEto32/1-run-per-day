import math

N, M = map(float, input().split())
M = int(M)

# 0.813 1 => 0.8
N = math.floor(N * 10**M) / (10**M)
print(N)
"""
切り捨てたい桁数の数字が整数になるまで10^nをかけて、
そこでmath.floorを使う。
その後、10^nで割って小数に戻す。
標準ライブラリのmath.floorが小数点以下を全て切り捨てとなるため。
"""
# あれ40点しかとれないのか
# 模範解答

Values = input().split()
N = float(Values[0])
M = int(Values[1])
print(
    "{:.{}f}".format(N, M)
)  # 入れ子にすることでNをM桁まで表示することができる Nが代入されるのは{}の中に、Mが代入されるのは.{}fの中に
# formatメソッドを使っている
# {}の中に.{}fを入れることで、小数点以下の桁数を指定できる
# N,Mをそれぞれ代入している
"""
format メソッドを使います。
format メソッドは 文字列.format() のように使うと、文字列中の {} に引数の前から順に置換を行います。たとえば、"{}-{}".format(1, 2) は 1-2 という文字列を生成して返します。
また、{} の中に意味のある文字列を記述することで、置換時に値の書式を定義することができます。
題意を満たす書式は "{:.xf}" と表現することができます。
今回、小数第 M 位の情報は標準入力から渡されるので、M の情報は変数に格納されています。
{} を入れ子にします。{} のある場所に置換されるので、今回の問題では "{:.{}f}" という書式を用意して、format メソッドを用いることで求められている出力を実現することができます。





"""
