Q_タプルはリストに比べデータ追加変更ができない分、内部構造が簡単なのでパフォーマンスがいいという認識でした。今回のnamedtupleは内部処理はクラスと変わらないような感じですが、パフォーマンスはどうなんでしょうか？
タプルと変わらん。

Q_本日の講義とは少しずれた内容かもしれませんが、パッケージの利用について質問です。便利なパッケージが多くある一方で、そのパッケージが安全であるかというのも開発においては重要だと思います。このパッケージの安全性を確認するために何か気を付けている手法等ありましたらお教えください。
書籍で紹介されているものは安全

Q_初学者です。私も本日の講義とは少しずれた質問かもしれませんが、オブジェクト指向に強くなるにはWebアプリ開発などをすれば宜しいでしょうか？オブジェクト指向に早く慣れたいです。
誰かの継承してクラスを理解するのが理想。
イメージしたのをクラスする。
とにかく書く。

Q_メモリー上のデータがどうとか、SQL文をどう書くかとかから解放されるのがいいところという認識だったのですが、やっぱりそういうことも知らなければならないのでしょうか。
withメモリ確保
closeメモリ開放
組み込みはシビアになる。

Q_内包表記以外に、下記のようなpython特有の文化がありますでしょうか。

・定数を大文字表記する
・returnで帰ってくる変数名を小文字
・returnで帰ってこない変数名を大文字
etc


お時間あればで構いませんので、ご教授いただけますと幸いです。
